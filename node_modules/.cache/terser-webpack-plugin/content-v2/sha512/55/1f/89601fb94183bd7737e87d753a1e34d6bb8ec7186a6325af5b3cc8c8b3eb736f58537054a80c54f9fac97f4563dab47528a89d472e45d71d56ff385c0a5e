{"map":"{\"version\":3,\"sources\":[\"/Users/sbeuran/Desktop/dev/coding_challenge/travel-buddy/src/components/HomePage.tsx\",\"/Users/sbeuran/Desktop/dev/coding_challenge/travel-buddy/src/components/SearchResultsPage.tsx\",\"/Users/sbeuran/Desktop/dev/coding_challenge/travel-buddy/src/App.tsx\",\"/Users/sbeuran/Desktop/dev/coding_challenge/travel-buddy/src/index.tsx\"],\"names\":[\"cities\",\"HomePage\",\"navigate\",\"useNavigate\",\"location\",\"useLocation\",\"_useState\",\"useState\",\"_useState2\",\"_slicedToArray\",\"origin\",\"setOrigin\",\"_useState3\",\"_useState4\",\"intermediateCities\",\"setIntermediateCities\",\"_useState5\",\"_useState6\",\"destination\",\"setDestination\",\"_useState7\",\"_useState8\",\"date\",\"setDate\",\"_useState9\",\"_useState10\",\"passengers\",\"setPassengers\",\"_useState11\",\"_useState12\",\"setOriginOptions\",\"_useState13\",\"_useState14\",\"setIntermediateOptions\",\"_useState15\",\"_useState16\",\"setDestinationOptions\",\"_useState17\",\"_useState18\",\"formError\",\"setFormError\",\"useEffect\",\"searchParams\",\"URLSearchParams\",\"search\",\"get\",\"delay\",\"setTimeout\",\"filterCities\",\"join\",\"clearTimeout\",\"keyword\",\"lowercaseKeyword\",\"toLowerCase\",\"filter\",\"_ref\",\"name\",\"String\",\"includes\",\"map\",\"_ref3\",\"React\",\"createElement\",\"onSubmit\",\"event\",\"preventDefault\",\"set\",\"concat\",\"toString\",\"htmlFor\",\"id\",\"type\",\"value\",\"onChange\",\"target\",\"required\",\"city\",\"index\",\"key\",\"updatedIntermediateCities\",\"_toConsumableArray\",\"handleIntermediateChange\",\"onClick\",\"splice\",\"handleRemoveIntermediateCity\",\"min\",\"SearchResultsPage\",\"distance\",\"setDistance\",\"loading\",\"setLoading\",\"error\",\"setError\",\"calculateDistance\",\"cityCoordinates\",\"reduce\",\"coords\",\"_ref2\",\"lat\",\"lon\",\"parseFloat\",\"route\",\"totalDistance\",\"i\",\"length\",\"startCity\",\"endCity\",\"startCoord\",\"endCoord\",\"Error\",\"calculateHaversineDistance\",\"toFixed\",\"toRadians\",\"degrees\",\"Math\",\"PI\",\"dLat\",\"dLon\",\"lat1\",\"lat2\",\"a\",\"sin\",\"cos\",\"atan2\",\"sqrt\",\"Fragment\",\"App\",\"Routes\",\"Route\",\"path\",\"element\",\"ReactDOM\",\"render\",\"Router\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState, useEffect } from 'react';\\nimport { useNavigate, useLocation } from 'react-router-dom';\\n\\nconst cities = [\\n  ['Paris', 48.856614, 2.352222],\\n  ['Marseille', 43.296482, 5.369780],\\n  ['Lyon', 45.764043, 4.835659],\\n  ['Toulouse', 43.604652, 1.444209],\\n  ['Nice', 43.710173, 7.261953],\\n  ['Nantes', 47.218371, -1.553621],\\n  ['Strasbourg', 48.573405, 7.752111],\\n  ['Montpellier', 43.610769, 3.876716],\\n  ['Bordeaux', 44.837789, -0.579180],\\n  ['Lille', 50.629250, 3.057256],\\n  ['Rennes', 48.117266, -1.677793],\\n  ['Reims', 49.258329, 4.031696],\\n  ['Le Havre', 49.494370, 0.107929],\\n  ['Saint-Étienne', 45.439695, 4.387178],\\n  ['Toulon', 43.124228, 5.928000],\\n  ['Angers', 47.478419, -0.563166],\\n  ['Grenoble', 45.188529, 5.724524],\\n  ['Dijon', 47.322047, 5.041480],\\n  ['Nîmes', 43.836699, 4.360054],\\n  ['Aix-en-Provence', 43.529742, 5.447427],\\n];\\n\\n\\nfunction HomePage() {\\n  const navigate = useNavigate();\\n  const location = useLocation();\\n\\n  const [origin, setOrigin] = useState('');\\n  const [intermediateCities, setIntermediateCities] = useState<string[]>([]);\\n  const [destination, setDestination] = useState('');\\n  const [date, setDate] = useState('');\\n  const [passengers, setPassengers] = useState('');\\n\\n  const [originOptions, setOriginOptions] = useState<string[]>([]);\\n  const [intermediateOptions, setIntermediateOptions] = useState<string[]>([]);\\n  const [destinationOptions, setDestinationOptions] = useState<string[]>([]);\\n\\n  const [formError, setFormError] = useState(false);\\n\\n  useEffect(() => {\\n    const searchParams = new URLSearchParams(location.search);\\n    setOrigin(searchParams.get('origin') || '');\\n    // Retrieve and set other form data from URL parameters\\n  }, [location]);\\n\\n  useEffect(() => {\\n    // Simulate asynchronous request for city options\\n    const delay = setTimeout(() => {\\n      setOriginOptions(filterCities(origin));\\n      setIntermediateOptions(filterCities(intermediateCities.join(',')));\\n      setDestinationOptions(filterCities(destination));\\n    }, 500);\\n\\n    return () => clearTimeout(delay);\\n  }, [origin, intermediateCities, destination]);\\n\\n  const filterCities = (keyword: string): string[] => {\\n    const lowercaseKeyword = keyword.toLowerCase();\\n    return cities\\n      .filter(([name]) => String(name).toLowerCase().includes(lowercaseKeyword))\\n      .map(([name]) => String(name));\\n  };\\n  \\n  \\n\\n  const handleOriginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n    setOrigin(event.target.value);\\n  };\\n\\n  const handleIntermediateChange = (index: number, event: React.ChangeEvent<HTMLInputElement>) => {\\n    const updatedIntermediateCities = [...intermediateCities];\\n    updatedIntermediateCities[index] = event.target.value;\\n    setIntermediateCities(updatedIntermediateCities);\\n  };\\n\\n  const handleAddIntermediateCity = () => {\\n    setIntermediateCities([...intermediateCities, '']);\\n  };\\n\\n  const handleRemoveIntermediateCity = (index: number) => {\\n    const updatedIntermediateCities = [...intermediateCities];\\n    updatedIntermediateCities.splice(index, 1);\\n    setIntermediateCities(updatedIntermediateCities);\\n  };\\n\\n  const handleDestinationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n    setDestination(event.target.value);\\n  };\\n\\n  const handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n    setDate(event.target.value);\\n  };\\n\\n  const handlePassengersChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n    setPassengers(event.target.value);\\n  };\\n\\n  const handleSubmit = (event: React.FormEvent) => {\\n    event.preventDefault();\\n\\n    if (!origin || !destination || !date || !passengers) {\\n      setFormError(true);\\n      return;\\n    }\\n\\n    setFormError(false);\\n\\n    const searchParams = new URLSearchParams();\\n    searchParams.set('origin', origin);\\n    // Set other form data in URL parameters\\n\\n    navigate(`/search-results?${searchParams.toString()}`);\\n  };\\n\\n  return (\\n    <div>\\n      <form onSubmit={handleSubmit}>\\n        <label htmlFor=\\\"origin\\\">City of Origin:</label>\\n        <input\\n          id=\\\"origin\\\"\\n          type=\\\"text\\\"\\n          value={origin}\\n          onChange={handleOriginChange}\\n          required\\n        />\\n\\n        {intermediateCities.map((city, index) => (\\n          <div key={index}>\\n            <label htmlFor={`intermediate-${index}`}>Intermediate City {index + 1}:</label>\\n            <input\\n              id={`intermediate-${index}`}\\n              type=\\\"text\\\"\\n              value={city}\\n              onChange={(event) => handleIntermediateChange(index, event)}\\n              required\\n            />\\n            <button type=\\\"button\\\" onClick={() => handleRemoveIntermediateCity(index)}>\\n              Remove\\n            </button>\\n          </div>\\n        ))}\\n\\n        <button type=\\\"button\\\" onClick={handleAddIntermediateCity}>\\n          Add Intermediate City\\n        </button>\\n\\n        <label htmlFor=\\\"destination\\\">City of Destination:</label>\\n        <input\\n          id=\\\"destination\\\"\\n          type=\\\"text\\\"\\n          value={destination}\\n          onChange={handleDestinationChange}\\n          required\\n        />\\n\\n        <label htmlFor=\\\"date\\\">Date of the Trip:</label>\\n        <input\\n          id=\\\"date\\\"\\n          type=\\\"date\\\"\\n          value={date}\\n          onChange={handleDateChange}\\n          required\\n        />\\n\\n        <label htmlFor=\\\"passengers\\\">Number of Passengers:</label>\\n        <input\\n          id=\\\"passengers\\\"\\n          type=\\\"number\\\"\\n          min=\\\"1\\\"\\n          value={passengers}\\n          onChange={handlePassengersChange}\\n          required\\n        />\\n\\n        {formError && <p>Please fill in all required fields.</p>}\\n\\n        <button type=\\\"submit\\\">Search</button>\\n      </form>\\n    </div>\\n  );\\n}\\n\\nexport default HomePage;\\n\",\"import React, { useState, useEffect } from 'react';\\nimport { useLocation } from 'react-router-dom';\\n\\nconst cities = [\\n  ['Paris', 48.856614, 2.352222],\\n  ['Marseille', 43.296482, 5.369780],\\n  ['Lyon', 45.764043, 4.835659],\\n  ['Toulouse', 43.604652, 1.444209],\\n  ['Nice', 43.710173, 7.261953],\\n  ['Nantes', 47.218371, -1.553621],\\n  ['Strasbourg', 48.573405, 7.752111],\\n  ['Montpellier', 43.610769, 3.876716],\\n  ['Bordeaux', 44.837789, -0.579180],\\n  ['Lille', 50.629250, 3.057256],\\n  ['Rennes', 48.117266, -1.677793],\\n  ['Reims', 49.258329, 4.031696],\\n  ['Le Havre', 49.494370, 0.107929],\\n  ['Saint-Étienne', 45.439695, 4.387178],\\n  ['Toulon', 43.124228, 5.928000],\\n  ['Angers', 47.478419, -0.563166],\\n  ['Grenoble', 45.188529, 5.724524],\\n  ['Dijon', 47.322047, 5.041480],\\n  ['Nîmes', 43.836699, 4.360054],\\n  ['Aix-en-Provence', 43.529742, 5.447427],\\n];\\n\\nfunction SearchResultsPage() {\\n  const location = useLocation();\\n\\n  const [origin, setOrigin] = useState('');\\n  const [intermediateCities, setIntermediateCities] = useState<string[]>([]);\\n  const [destination, setDestination] = useState('');\\n  const [date, setDate] = useState('');\\n  const [passengers, setPassengers] = useState('');\\n\\n  const [distance, setDistance] = useState('');\\n  const [loading, setLoading] = useState(false);\\n  const [error, setError] = useState(false);\\n\\n  useEffect(() => {\\n    const searchParams = new URLSearchParams(location.search);\\n    setOrigin(searchParams.get('origin') || '');\\n    // Retrieve and set other form data from URL parameters\\n  }, [location]);\\n\\n  useEffect(() => {\\n    calculateDistance();\\n  }, []);\\n\\n  const calculateDistance = () => {\\n    setLoading(true);\\n    setError(false);\\n\\n    // Simulate asynchronous distance calculation\\n    setTimeout(() => {\\n      try {\\n        const cityCoordinates: { [key: string]: { lat: number; lon: number } } = cities.reduce(\\n          (coords, [name, lat, lon]) => {\\n            coords[name] = { lat: parseFloat(lat.toString()), lon: parseFloat(lon.toString()) };\\n            return coords;\\n          },\\n          {} as { [key: string]: { lat: number; lon: number } }\\n        );\\n\\n        const route = [origin, ...intermediateCities, destination];\\n        let totalDistance = 0;\\n\\n        for (let i = 0; i < route.length - 1; i++) {\\n          const startCity = route[i];\\n          const endCity = route[i + 1];\\n\\n          const startCoord = cityCoordinates[startCity];\\n          const endCoord = cityCoordinates[endCity];\\n\\n          if (!startCoord || !endCoord) {\\n            throw new Error('Invalid cities for distance calculation');\\n          }\\n\\n          const distance = calculateHaversineDistance(startCoord, endCoord);\\n          totalDistance += distance;\\n        }\\n\\n        setDistance(totalDistance.toFixed(2));\\n        setLoading(false);\\n      } catch (error) {\\n        setDistance('');\\n        setLoading(false);\\n        setError(true);\\n      }\\n    }, 500);\\n  };\\n\\n  const calculateHaversineDistance = (startCoord: { lat: number; lon: number }, endCoord: { lat: number; lon: number }) => {\\n    const earthRadius = 6371; // in kilometers\\n\\n    const toRadians = (degrees: number) => {\\n      return (degrees * Math.PI) / 180;\\n    };\\n\\n    const dLat = toRadians(endCoord.lat - startCoord.lat);\\n    const dLon = toRadians(endCoord.lon - startCoord.lon);\\n\\n    const lat1 = toRadians(startCoord.lat);\\n    const lat2 = toRadians(endCoord.lat);\\n\\n    const a =\\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\\n      Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\\n    const distance = earthRadius * c;\\n\\n    return distance;\\n  };\\n\\n  return (\\n    <div>\\n      <h2>Search Results</h2>\\n\\n      <p>Origin: {origin}</p>\\n      <p>Intermediate Cities: {intermediateCities.join(', ')}</p>\\n      <p>Destination: {destination}</p>\\n      <p>Date: {date}</p>\\n      <p>Passengers: {passengers}</p>\\n\\n      {loading ? (\\n        <p>Loading...</p>\\n      ) : (\\n        <>\\n          {error ? (\\n            <p>Error occurred while calculating distance.</p>\\n          ) : (\\n            <p>Total Distance: {distance} km</p>\\n          )}\\n        </>\\n      )}\\n    </div>\\n  );\\n}\\n\\nexport default SearchResultsPage;\\n\",\"import React from 'react';\\nimport { Route, Routes } from 'react-router-dom';\\nimport HomePage from './components/HomePage';\\nimport SearchResultsPage from './components/SearchResultsPage';\\n\\nfunction App() {\\n  return (\\n    <div>\\n      <Routes>\\n        <Route path=\\\"/\\\" element={<HomePage />} />\\n        <Route path=\\\"/search-results\\\" element={<SearchResultsPage />} />\\n      </Routes>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { BrowserRouter as Router } from 'react-router-dom';\\nimport App from './App';\\n\\nReactDOM.render(\\n  <Router>\\n    <App />\\n  </Router>,\\n  document.getElementById('root')\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{17:function(e,t,a){e.exports=a(25)},25:function(e,t,a){\"use strict\";a.r(t);var n=a(1),r=a.n(n),c=a(16),l=a.n(c),i=a(8),u=a(0),o=a(4),s=a(3),m=[[\"Paris\",48.856614,2.352222],[\"Marseille\",43.296482,5.36978],[\"Lyon\",45.764043,4.835659],[\"Toulouse\",43.604652,1.444209],[\"Nice\",43.710173,7.261953],[\"Nantes\",47.218371,-1.553621],[\"Strasbourg\",48.573405,7.752111],[\"Montpellier\",43.610769,3.876716],[\"Bordeaux\",44.837789,-.57918],[\"Lille\",50.62925,3.057256],[\"Rennes\",48.117266,-1.677793],[\"Reims\",49.258329,4.031696],[\"Le Havre\",49.49437,.107929],[\"Saint-\\xc9tienne\",45.439695,4.387178],[\"Toulon\",43.124228,5.928],[\"Angers\",47.478419,-.563166],[\"Grenoble\",45.188529,5.724524],[\"Dijon\",47.322047,5.04148],[\"N\\xeemes\",43.836699,4.360054],[\"Aix-en-Provence\",43.529742,5.447427]];var b=function(){var e=Object(u.n)(),t=Object(u.l)(),a=Object(n.useState)(\"\"),c=Object(s.a)(a,2),l=c[0],i=c[1],b=Object(n.useState)([]),j=Object(s.a)(b,2),f=j[0],O=j[1],d=Object(n.useState)(\"\"),E=Object(s.a)(d,2),v=E[0],p=E[1],h=Object(n.useState)(\"\"),g=Object(s.a)(h,2),S=g[0],y=g[1],w=Object(n.useState)(\"\"),C=Object(s.a)(w,2),M=C[0],L=C[1],P=Object(n.useState)([]),x=Object(s.a)(P,2),F=(x[0],x[1]),R=Object(n.useState)([]),T=Object(s.a)(R,2),q=(T[0],T[1]),D=Object(n.useState)([]),N=Object(s.a)(D,2),k=(N[0],N[1]),I=Object(n.useState)(!1),A=Object(s.a)(I,2),B=A[0],U=A[1];Object(n.useEffect)(function(){var e=new URLSearchParams(t.search);i(e.get(\"origin\")||\"\")},[t]),Object(n.useEffect)(function(){var e=setTimeout(function(){F(G(l)),q(G(f.join(\",\"))),k(G(v))},500);return function(){return clearTimeout(e)}},[l,f,v]);var G=function(e){var t=e.toLowerCase();return m.filter(function(e){var a=Object(s.a)(e,1)[0];return String(a).toLowerCase().includes(t)}).map(function(e){var t=Object(s.a)(e,1)[0];return String(t)})};return r.a.createElement(\"div\",null,r.a.createElement(\"form\",{onSubmit:function(t){if(t.preventDefault(),l&&v&&S&&M){U(!1);var a=new URLSearchParams;a.set(\"origin\",l),e(\"/search-results?\".concat(a.toString()))}else U(!0)}},r.a.createElement(\"label\",{htmlFor:\"origin\"},\"City of Origin:\"),r.a.createElement(\"input\",{id:\"origin\",type:\"text\",value:l,onChange:function(e){i(e.target.value)},required:!0}),f.map(function(e,t){return r.a.createElement(\"div\",{key:t},r.a.createElement(\"label\",{htmlFor:\"intermediate-\".concat(t)},\"Intermediate City \",t+1,\":\"),r.a.createElement(\"input\",{id:\"intermediate-\".concat(t),type:\"text\",value:e,onChange:function(e){return function(e,t){var a=Object(o.a)(f);a[e]=t.target.value,O(a)}(t,e)},required:!0}),r.a.createElement(\"button\",{type:\"button\",onClick:function(){return function(e){var t=Object(o.a)(f);t.splice(e,1),O(t)}(t)}},\"Remove\"))}),r.a.createElement(\"button\",{type:\"button\",onClick:function(){O([].concat(Object(o.a)(f),[\"\"]))}},\"Add Intermediate City\"),r.a.createElement(\"label\",{htmlFor:\"destination\"},\"City of Destination:\"),r.a.createElement(\"input\",{id:\"destination\",type:\"text\",value:v,onChange:function(e){p(e.target.value)},required:!0}),r.a.createElement(\"label\",{htmlFor:\"date\"},\"Date of the Trip:\"),r.a.createElement(\"input\",{id:\"date\",type:\"date\",value:S,onChange:function(e){y(e.target.value)},required:!0}),r.a.createElement(\"label\",{htmlFor:\"passengers\"},\"Number of Passengers:\"),r.a.createElement(\"input\",{id:\"passengers\",type:\"number\",min:\"1\",value:M,onChange:function(e){L(e.target.value)},required:!0}),B&&r.a.createElement(\"p\",null,\"Please fill in all required fields.\"),r.a.createElement(\"button\",{type:\"submit\"},\"Search\")))},j=[[\"Paris\",48.856614,2.352222],[\"Marseille\",43.296482,5.36978],[\"Lyon\",45.764043,4.835659],[\"Toulouse\",43.604652,1.444209],[\"Nice\",43.710173,7.261953],[\"Nantes\",47.218371,-1.553621],[\"Strasbourg\",48.573405,7.752111],[\"Montpellier\",43.610769,3.876716],[\"Bordeaux\",44.837789,-.57918],[\"Lille\",50.62925,3.057256],[\"Rennes\",48.117266,-1.677793],[\"Reims\",49.258329,4.031696],[\"Le Havre\",49.49437,.107929],[\"Saint-\\xc9tienne\",45.439695,4.387178],[\"Toulon\",43.124228,5.928],[\"Angers\",47.478419,-.563166],[\"Grenoble\",45.188529,5.724524],[\"Dijon\",47.322047,5.04148],[\"N\\xeemes\",43.836699,4.360054],[\"Aix-en-Provence\",43.529742,5.447427]];var f=function(){var e=Object(u.l)(),t=Object(n.useState)(\"\"),a=Object(s.a)(t,2),c=a[0],l=a[1],i=Object(n.useState)([]),m=Object(s.a)(i,2),b=m[0],f=(m[1],Object(n.useState)(\"\")),O=Object(s.a)(f,2),d=O[0],E=(O[1],Object(n.useState)(\"\")),v=Object(s.a)(E,2),p=v[0],h=(v[1],Object(n.useState)(\"\")),g=Object(s.a)(h,2),S=g[0],y=(g[1],Object(n.useState)(\"\")),w=Object(s.a)(y,2),C=w[0],M=w[1],L=Object(n.useState)(!1),P=Object(s.a)(L,2),x=P[0],F=P[1],R=Object(n.useState)(!1),T=Object(s.a)(R,2),q=T[0],D=T[1];Object(n.useEffect)(function(){var t=new URLSearchParams(e.search);l(t.get(\"origin\")||\"\")},[e]),Object(n.useEffect)(function(){N()},[]);var N=function(){F(!0),D(!1),setTimeout(function(){try{for(var e=j.reduce(function(e,t){var a=Object(s.a)(t,3),n=a[0],r=a[1],c=a[2];return e[n]={lat:parseFloat(r.toString()),lon:parseFloat(c.toString())},e},{}),t=[c].concat(Object(o.a)(b),[d]),a=0,n=0;n<t.length-1;n++){var r=t[n],l=t[n+1],i=e[r],u=e[l];if(!i||!u)throw new Error(\"Invalid cities for distance calculation\");a+=k(i,u)}M(a.toFixed(2)),F(!1)}catch(q){M(\"\"),F(!1),D(!0)}},500)},k=function(e,t){var a=function(e){return e*Math.PI/180},n=a(t.lat-e.lat),r=a(t.lon-e.lon),c=a(e.lat),l=a(t.lat),i=Math.sin(n/2)*Math.sin(n/2)+Math.sin(r/2)*Math.sin(r/2)*Math.cos(c)*Math.cos(l);return 2*Math.atan2(Math.sqrt(i),Math.sqrt(1-i))*6371};return r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,\"Search Results\"),r.a.createElement(\"p\",null,\"Origin: \",c),r.a.createElement(\"p\",null,\"Intermediate Cities: \",b.join(\", \")),r.a.createElement(\"p\",null,\"Destination: \",d),r.a.createElement(\"p\",null,\"Date: \",p),r.a.createElement(\"p\",null,\"Passengers: \",S),x?r.a.createElement(\"p\",null,\"Loading...\"):r.a.createElement(r.a.Fragment,null,q?r.a.createElement(\"p\",null,\"Error occurred while calculating distance.\"):r.a.createElement(\"p\",null,\"Total Distance: \",C,\" km\")))};var O=function(){return r.a.createElement(\"div\",null,r.a.createElement(u.c,null,r.a.createElement(u.a,{path:\"/\",element:r.a.createElement(b,null)}),r.a.createElement(u.a,{path:\"/search-results\",element:r.a.createElement(f,null)})))};l.a.render(r.a.createElement(i.a,null,r.a.createElement(O,null)),document.getElementById(\"root\"))}},[[17,2,1]]]);","extractedComments":[]}