{"version":3,"sources":["components/Button.tsx","constants/const.tsx","pages/HomePage.tsx","pages/SearchResultsPage.tsx","App.tsx","index.tsx"],"names":["Button","props","title","disabled","onClick","React","createElement","className","CITIES","HomePage","navigate","useNavigate","location","useLocation","_useState","useState","_useState2","_slicedToArray","origin","setOrigin","_useState3","_useState4","intermediateCities","setIntermediateCities","_useState5","_useState6","destination","setDestination","_useState7","_useState8","date","setDate","_useState9","_useState10","passengers","setPassengers","_useState11","_useState12","setOriginOptions","_useState13","_useState14","setIntermediateOptions","_useState15","_useState16","setDestinationOptions","_useState17","_useState18","formError","setFormError","useEffect","searchParams","URLSearchParams","search","get","delay","setTimeout","filterCities","join","clearTimeout","keyword","lowercaseKeyword","toLowerCase","filter","_ref","name","String","includes","map","_ref3","onSubmit","event","preventDefault","set","concat","toString","htmlFor","id","type","value","onChange","target","required","city","index","key","updatedIntermediateCities","_toConsumableArray","handleIntermediateChange","splice","handleRemoveIntermediateCity","min","SearchResultsPage","distance","setDistance","loading","setLoading","error","setError","calculateDistance","cityCoordinates","reduce","coords","_ref2","lat","lon","parseFloat","route","totalDistance","i","length","startCity","endCity","startCoord","endCoord","Error","calculateHaversineDistance","toFixed","console","log","toRadians","degrees","Math","PI","dLat","dLon","lat1","lat2","a","sin","cos","atan2","sqrt","Fragment","App","Routes","Route","path","element","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.1770cfde.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface ButtonProps {\n    type?: string,\n    title: string,\n    disabled: boolean\n    onClick: any\n}\n\nfunction Button (props: ButtonProps) {\n    const { title, disabled, onClick } = props;\n\n    return (\n        <button className='normal-btn' disabled={disabled} onClick={onClick}>{title}</button>\n    );\n}\n\nexport default Button;","export const CITIES = [\n    ['Paris', 48.856614, 2.352222],\n    ['Marseille', 43.296482, 5.369780],\n    ['Lyon', 45.764043, 4.835659],\n    ['Toulouse', 43.604652, 1.444209],\n    ['Nice', 43.710173, 7.261953],\n    ['Nantes', 47.218371, -1.553621],\n    ['Strasbourg', 48.573405, 7.752111],\n    ['Montpellier', 43.610769, 3.876716],\n    ['Bordeaux', 44.837789, -0.579180],\n    ['Lille', 50.629250, 3.057256],\n    ['Rennes', 48.117266, -1.677793],\n    ['Reims', 49.258329, 4.031696],\n    ['Le Havre', 49.494370, 0.107929],\n    ['Saint-Étienne', 45.439695, 4.387178],\n    ['Toulon', 43.124228, 5.928000],\n    ['Angers', 47.478419, -0.563166],\n    ['Grenoble', 45.188529, 5.724524],\n    ['Dijon', 47.322047, 5.041480],\n    ['Nîmes', 43.836699, 4.360054],\n    ['Aix-en-Provence', 43.529742, 5.447427],\n];","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Button from '../components/Button';\nimport SelectCity from '../components/SelectCity';\nimport { CITIES } from '../constants/const';\n\nfunction HomePage() {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const [origin, setOrigin] = useState('');\n  const [intermediateCities, setIntermediateCities] = useState<string[]>([]);\n  const [destination, setDestination] = useState('');\n  const [date, setDate] = useState('');\n  const [passengers, setPassengers] = useState('');\n\n  const [originOptions, setOriginOptions] = useState<string[]>([]);\n  const [intermediateOptions, setIntermediateOptions] = useState<string[]>([]);\n  const [destinationOptions, setDestinationOptions] = useState<string[]>([]);\n\n  const [formError, setFormError] = useState(false);\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    setOrigin(searchParams.get('origin') || '');\n    // Retrieve and set other form data from URL parameters\n  }, [location]);\n\n  useEffect(() => {\n    // Simulate asynchronous request for city options\n    const delay = setTimeout(() => {\n      setOriginOptions(filterCities(origin));\n      setIntermediateOptions(filterCities(intermediateCities.join(',')));\n      setDestinationOptions(filterCities(destination));\n    }, 500);\n\n    return () => clearTimeout(delay);\n  }, [origin, intermediateCities, destination]);\n\n  const filterCities = (keyword: string): string[] => {\n    const lowercaseKeyword = keyword.toLowerCase();\n    return CITIES\n      .filter(([name]) => String(name).toLowerCase().includes(lowercaseKeyword))\n      .map(([name]) => String(name));\n  };\n  \n  \n\n  const handleOriginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setOrigin(event.target.value);\n  };\n\n  const handleIntermediateChange = (index: number, event: React.ChangeEvent<HTMLInputElement>) => {\n    const updatedIntermediateCities = [...intermediateCities];\n    updatedIntermediateCities[index] = event.target.value;\n    setIntermediateCities(updatedIntermediateCities);\n  };\n\n  const handleAddIntermediateCity = () => {\n    setIntermediateCities([...intermediateCities, '']);\n  };\n\n  const handleRemoveIntermediateCity = (index: number) => {\n    const updatedIntermediateCities = [...intermediateCities];\n    updatedIntermediateCities.splice(index, 1);\n    setIntermediateCities(updatedIntermediateCities);\n  };\n\n  const handleDestinationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDestination(event.target.value);\n  };\n\n  const handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDate(event.target.value);\n  };\n\n  const handlePassengersChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassengers(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!origin || !destination || !date || !passengers) {\n      setFormError(true);\n      return;\n    }\n\n    setFormError(false);\n\n    const searchParams = new URLSearchParams();\n    searchParams.set('origin', origin);\n    searchParams.set('destination', destination);\n    searchParams.set('date', date);\n    searchParams.set('passengers', passengers);\n    // Set other form data in URL parameters\n\n    navigate(`/search-results?${searchParams.toString()}`);\n  };\n\n  return (\n    <div className='page'>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"origin\">City of Origin:</label>\n        <input\n          id=\"origin\"\n          type=\"text\"\n          value={origin}\n          onChange={handleOriginChange}\n          required\n        />\n        {/* <SelectCity label='City of Origin' selectedIndexes={[]} onChange={() => {}} value={0}/> */}\n        {intermediateCities.map((city, index) => (\n          <div key={index}>\n            <label htmlFor={`intermediate-${index}`}>Intermediate City {index + 1}:</label>\n            <input\n              id={`intermediate-${index}`}\n              type=\"text\"\n              value={city}\n              onChange={(event) => handleIntermediateChange(index, event)}\n              required\n            />\n            <button type=\"button\" onClick={() => handleRemoveIntermediateCity(index)}>\n              Remove\n            </button>\n          </div>\n        ))}\n\n        <button type=\"button\" onClick={handleAddIntermediateCity}>\n          Add Intermediate City\n        </button>\n\n        <label htmlFor=\"destination\">City of Destination:</label>\n        <input\n          id=\"destination\"\n          type=\"text\"\n          value={destination}\n          onChange={handleDestinationChange}\n          required\n        />\n\n        <label htmlFor=\"date\">Date of the Trip:</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          value={date}\n          onChange={handleDateChange}\n          required\n        />\n\n        <label htmlFor=\"passengers\">Number of Passengers:</label>\n        <input\n          id=\"passengers\"\n          type=\"number\"\n          min=\"1\"\n          value={passengers}\n          onChange={handlePassengersChange}\n          required\n        />\n\n        {formError && <p>Please fill in all required fields.</p>}\n\n        <Button type=\"submit\" title='Submit' disabled={false} onClick={() => {}}/>\n      </form>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { CITIES } from '../constants/const';\n\nfunction SearchResultsPage() {\n  const location = useLocation();\n\n  const [origin, setOrigin] = useState('');\n  const [intermediateCities, setIntermediateCities] = useState<string[]>([]);\n  const [destination, setDestination] = useState('');\n  const [date, setDate] = useState('');\n  const [passengers, setPassengers] = useState('');\n\n  const [distance, setDistance] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    setOrigin(searchParams.get('origin') || '');\n    setDestination(searchParams.get('destination') || '');\n    setDate(searchParams.get('date') || '');\n    setPassengers(searchParams.get('passengers') || '');\n    // Retrieve and set other form data from URL parameters\n  }, [location]);\n\n  useEffect(() => {\n    calculateDistance();\n  }, [origin, destination]);\n\n  const calculateDistance = () => {\n    if (!origin || !destination) {\n      return;\n    }\n    setLoading(true);\n    setError(false);\n\n    // Simulate asynchronous distance calculation\n    setTimeout(() => {\n      try {\n        const cityCoordinates: { [key: string]: { lat: number; lon: number } } = CITIES.reduce(\n          (coords, [name, lat, lon]) => {\n            coords[name] = { lat: parseFloat(lat.toString()), lon: parseFloat(lon.toString()) };\n            return coords;\n          },\n          {} as { [key: string]: { lat: number; lon: number } }\n        );\n\n        const route = [origin, ...intermediateCities, destination];\n        let totalDistance = 0;\n\n        for (let i = 0; i < route.length - 1; i++) {\n          const startCity = route[i];\n          const endCity = route[i + 1];\n\n          const startCoord = cityCoordinates[startCity];\n          const endCoord = cityCoordinates[endCity];\n\n          if (!startCoord || !endCoord) {\n            throw new Error('Invalid cities for distance calculation');\n          }\n\n          const distance = calculateHaversineDistance(startCoord, endCoord);\n          totalDistance += distance;\n        }\n\n        setDistance(totalDistance.toFixed(2));\n        setLoading(false);\n      } catch (error) {\n        console.log(error)\n        setDistance('');\n        setLoading(false);\n        setError(true);\n      }\n    }, 500);\n  };\n\n  const calculateHaversineDistance = (startCoord: { lat: number; lon: number }, endCoord: { lat: number; lon: number }) => {\n    const earthRadius = 6371; // in kilometers\n\n    const toRadians = (degrees: number) => {\n      return (degrees * Math.PI) / 180;\n    };\n\n    const dLat = toRadians(endCoord.lat - startCoord.lat);\n    const dLon = toRadians(endCoord.lon - startCoord.lon);\n\n    const lat1 = toRadians(startCoord.lat);\n    const lat2 = toRadians(endCoord.lat);\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = earthRadius * c;\n\n    return distance;\n  };\n\n  return (\n    <div className='page'>\n      <h2>Search Results</h2>\n\n      <p>Origin: {origin}</p>\n      <p>Intermediate Cities: {intermediateCities.join(', ')}</p>\n      <p>Destination: {destination}</p>\n      <p>Date: {date}</p>\n      <p>Passengers: {passengers}</p>\n\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          {error ? (\n            <p>Error occurred while calculating distance.</p>\n          ) : (\n            <p>Total Distance: {distance} km</p>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default SearchResultsPage;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport SearchResultsPage from './pages/SearchResultsPage';\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/search-results\" element={<SearchResultsPage />} />\n      </Routes>\n      <div className='background'></div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}